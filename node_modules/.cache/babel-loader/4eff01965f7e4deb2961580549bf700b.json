{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Projects/Todo App/Client/src/components/taskitem/Taskitem.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faXmark, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Taskitem(props) {\n  // props array destructuring\n  const {\n    tasks,\n    setTasks,\n    filterTasks,\n    showTasks,\n    getTasksCall,\n    logout\n  } = props;\n\n  async function refreshTokens(func, task) {\n    let refreshToken = sessionStorage.getItem(\"refreshjwt\");\n    return axios.post(\"https://pereira277todoapi.herokuapp.com/user/token\", {\n      token: refreshToken\n    }).then(response => {\n      sessionStorage.setItem(\"jwt\", response.data.accessToken);\n      sessionStorage.setItem(\"refreshjwt\", response.data.refreshToken);\n    }).then(() => func(task)).catch(error => {\n      console.log(error.response.status);\n      logout();\n    });\n  } // API FUNCTIONS\n\n\n  async function taskDoneCall(task) {\n    let done;\n    let id = task._id;\n    console.log(id);\n\n    if (task.done === true) {\n      done = false;\n    } else {\n      done = true;\n    }\n\n    await axios.put(\"https://pereira277todoapi.herokuapp.com/dashboard/\", {\n      id,\n      done\n    }).then(response => {\n      getTasksCall();\n    }).catch(async function (error) {\n      console.log(\"Executing refresh token\");\n      await refreshTokens(taskDoneCall, task);\n    });\n  } // DELETE\n\n\n  async function taskDeleteCall(task) {\n    await axios.delete(`https://pereira277todoapi.herokuapp.com/dashboard/${task._id}`).then(response => {\n      getTasksCall();\n    }).catch(async function (error) {\n      console.log(\"Executing refresh token\");\n      await refreshTokens(taskDeleteCall, task);\n    });\n    getTasksCall();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasklist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: showTasks.map(task => task.done == true ? /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"taskitem-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => taskDoneCall(task),\n          className: \"done-btn done-btn-done\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: \"check-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"taskitem-text taskitem-done\",\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => taskDeleteCall(task),\n          className: \"delete-btn delete-btn-done\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faXmark,\n            className: \"xmark-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"taskitem-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => taskDoneCall(task),\n          className: \"done-btn\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: \"check-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"taskitem-text\",\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => taskDeleteCall(task),\n          className: \"delete-btn\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faXmark,\n            className: \"xmark-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasklist-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"x items left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Clear Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Taskitem;\nexport default Taskitem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Taskitem\");","map":{"version":3,"names":["React","axios","FontAwesomeIcon","faXmark","faCheck","Taskitem","props","tasks","setTasks","filterTasks","showTasks","getTasksCall","logout","refreshTokens","func","task","refreshToken","sessionStorage","getItem","post","token","then","response","setItem","data","accessToken","catch","error","console","log","status","taskDoneCall","done","id","_id","put","taskDeleteCall","delete","map","name"],"sources":["/home/lucas/Projects/Todo App/Client/src/components/taskitem/Taskitem.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faXmark, faCheck } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Taskitem(props) {\n  // props array destructuring\n  const { tasks, setTasks, filterTasks, showTasks, getTasksCall, logout } =\n    props;\n\n  async function refreshTokens(func, task) {\n    let refreshToken = sessionStorage.getItem(\"refreshjwt\");\n    return axios\n      .post(\"https://pereira277todoapi.herokuapp.com/user/token\", {\n        token: refreshToken,\n      })\n      .then((response) => {\n        sessionStorage.setItem(\"jwt\", response.data.accessToken);\n        sessionStorage.setItem(\"refreshjwt\", response.data.refreshToken);\n      })\n      .then(() => func(task))\n      .catch((error) => {\n        console.log(error.response.status);\n        logout();\n      });\n  }\n\n  // API FUNCTIONS\n  async function taskDoneCall(task) {\n    let done;\n    let id = task._id;\n    console.log(id);\n    if (task.done === true) {\n      done = false;\n    } else {\n      done = true;\n    }\n    await axios\n      .put(\"https://pereira277todoapi.herokuapp.com/dashboard/\", { id, done })\n      .then((response) => {\n        getTasksCall();\n      })\n      .catch(async function (error) {\n        console.log(\"Executing refresh token\");\n        await refreshTokens(taskDoneCall, task);\n      });\n  }\n\n  // DELETE\n  async function taskDeleteCall(task) {\n    await axios\n      .delete(`https://pereira277todoapi.herokuapp.com/dashboard/${task._id}`)\n      .then((response) => {\n        getTasksCall();\n      })\n      .catch(async function (error) {\n        console.log(\"Executing refresh token\");\n        await refreshTokens(taskDeleteCall, task);\n      });\n    getTasksCall();\n  }\n\n  return (\n    <div className=\"tasklist-container\">\n      <ul>\n        {showTasks.map((task) =>\n          task.done == true ? (\n            <li key={task._id} className=\"taskitem-container\">\n              <button\n                onClick={() => taskDoneCall(task)}\n                className=\"done-btn done-btn-done\"\n              >\n                <FontAwesomeIcon icon={faCheck} className=\"check-icon\" />\n              </button>\n              <span className=\"taskitem-text taskitem-done\">{task.name}</span>\n              <button\n                onClick={() => taskDeleteCall(task)}\n                className=\"delete-btn delete-btn-done\"\n              >\n                <FontAwesomeIcon icon={faXmark} className=\"xmark-icon\" />\n              </button>\n            </li>\n          ) : (\n            <li key={task._id} className=\"taskitem-container\">\n              <button onClick={() => taskDoneCall(task)} className=\"done-btn\">\n                <FontAwesomeIcon icon={faCheck} className=\"check-icon\" />\n              </button>\n              <span className=\"taskitem-text\">{task.name}</span>\n              <button\n                onClick={() => taskDeleteCall(task)}\n                className=\"delete-btn\"\n              >\n                <FontAwesomeIcon icon={faXmark} className=\"xmark-icon\" />\n              </button>\n            </li>\n          )\n        )}\n      </ul>\n      <div className=\"tasklist-buttons\">\n        <span>x items left</span>\n        <button>Clear Completed</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Taskitem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}