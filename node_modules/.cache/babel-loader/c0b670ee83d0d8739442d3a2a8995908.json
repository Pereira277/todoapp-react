{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Projects/Todo App/Client/src/components/input/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Input(props) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const done = false; // props array destructuring\n\n  const {\n    getTasksCall,\n    logout\n  } = props; //Refresh token\n\n  async function refreshTokens(e) {\n    let refreshToken = sessionStorage.getItem(\"refreshjwt\");\n    return axios.post(\"https://pereira277todoapi.herokuapp.com/user/token\", {\n      token: refreshToken\n    }).then(response => {\n      sessionStorage.setItem(\"jwt\", response.data.accessToken);\n      sessionStorage.setItem(\"refreshjwt\", response.data.refreshToken);\n    }).then(() => createTask(e)).catch(error => {\n      console.log(error.response.status);\n      logout();\n    });\n  } // NEW POST TASKS\n\n\n  const createTask = e => {\n    e.preventDefault();\n    console.log(name);\n    axios.post(\"https://pereira277todoapi.herokuapp.com/dashboard/\", {\n      name,\n      done,\n      createdby: \"\"\n    }).then(response => {\n      alert(\"Task Created\");\n      setName(\"\");\n      getTasksCall();\n    }).catch(async function (error) {\n      console.log(\"Executing refresh token\");\n      await refreshTokens(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createTask,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Create a new todo\",\n        maxLength: \"30\",\n        className: \"add-input\",\n        value: name,\n        onChange: e => {\n          setName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Input, \"gFPpQ6rgfiGkmgRsh4q2nIO1W+Q=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","axios","Input","props","name","setName","done","getTasksCall","logout","refreshTokens","e","refreshToken","sessionStorage","getItem","post","token","then","response","setItem","data","accessToken","createTask","catch","error","console","log","status","preventDefault","createdby","alert","target","value"],"sources":["/home/lucas/Projects/Todo App/Client/src/components/input/Input.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function Input(props) {\n  const [name, setName] = useState(\"\");\n  const done = false;\n\n  // props array destructuring\n  const { getTasksCall, logout } = props;\n\n  //Refresh token\n  async function refreshTokens(e) {\n    let refreshToken = sessionStorage.getItem(\"refreshjwt\");\n    return axios\n      .post(\"https://pereira277todoapi.herokuapp.com/user/token\", {\n        token: refreshToken,\n      })\n      .then((response) => {\n        sessionStorage.setItem(\"jwt\", response.data.accessToken);\n        sessionStorage.setItem(\"refreshjwt\", response.data.refreshToken);\n      })\n      .then(() => createTask(e))\n      .catch((error) => {\n        console.log(error.response.status);\n        logout();\n      });\n  }\n\n  // NEW POST TASKS\n  const createTask = (e) => {\n    e.preventDefault();\n    console.log(name);\n    axios\n      .post(\"https://pereira277todoapi.herokuapp.com/dashboard/\", {\n        name,\n        done,\n        createdby: \"\",\n      })\n      .then((response) => {\n        alert(\"Task Created\");\n        setName(\"\");\n        getTasksCall();\n      })\n      .catch(async function (error) {\n        console.log(\"Executing refresh token\");\n        await refreshTokens(e);\n      });\n  };\n\n  return (\n    <div>\n      <form onSubmit={createTask}>\n        <input\n          placeholder=\"Create a new todo\"\n          maxLength=\"30\"\n          className=\"add-input\"\n          value={name}\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n        ></input>\n      </form>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;EAAA;;EACnC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAMM,IAAI,GAAG,KAAb,CAFmC,CAInC;;EACA,MAAM;IAAEC,YAAF;IAAgBC;EAAhB,IAA2BL,KAAjC,CALmC,CAOnC;;EACA,eAAeM,aAAf,CAA6BC,CAA7B,EAAgC;IAC9B,IAAIC,YAAY,GAAGC,cAAc,CAACC,OAAf,CAAuB,YAAvB,CAAnB;IACA,OAAOZ,KAAK,CACTa,IADI,CACC,oDADD,EACuD;MAC1DC,KAAK,EAAEJ;IADmD,CADvD,EAIJK,IAJI,CAIEC,QAAD,IAAc;MAClBL,cAAc,CAACM,OAAf,CAAuB,KAAvB,EAA8BD,QAAQ,CAACE,IAAT,CAAcC,WAA5C;MACAR,cAAc,CAACM,OAAf,CAAuB,YAAvB,EAAqCD,QAAQ,CAACE,IAAT,CAAcR,YAAnD;IACD,CAPI,EAQJK,IARI,CAQC,MAAMK,UAAU,CAACX,CAAD,CARjB,EASJY,KATI,CASGC,KAAD,IAAW;MAChBC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACN,QAAN,CAAeS,MAA3B;MACAlB,MAAM;IACP,CAZI,CAAP;EAaD,CAvBkC,CAyBnC;;;EACA,MAAMa,UAAU,GAAIX,CAAD,IAAO;IACxBA,CAAC,CAACiB,cAAF;IACAH,OAAO,CAACC,GAAR,CAAYrB,IAAZ;IACAH,KAAK,CACFa,IADH,CACQ,oDADR,EAC8D;MAC1DV,IAD0D;MAE1DE,IAF0D;MAG1DsB,SAAS,EAAE;IAH+C,CAD9D,EAMGZ,IANH,CAMSC,QAAD,IAAc;MAClBY,KAAK,CAAC,cAAD,CAAL;MACAxB,OAAO,CAAC,EAAD,CAAP;MACAE,YAAY;IACb,CAVH,EAWGe,KAXH,CAWS,gBAAgBC,KAAhB,EAAuB;MAC5BC,OAAO,CAACC,GAAR,CAAY,yBAAZ;MACA,MAAMhB,aAAa,CAACC,CAAD,CAAnB;IACD,CAdH;EAeD,CAlBD;;EAoBA,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAEW,UAAhB;MAAA,uBACE;QACE,WAAW,EAAC,mBADd;QAEE,SAAS,EAAC,IAFZ;QAGE,SAAS,EAAC,WAHZ;QAIE,KAAK,EAAEjB,IAJT;QAKE,QAAQ,EAAGM,CAAD,IAAO;UACfL,OAAO,CAACK,CAAC,CAACoB,MAAF,CAASC,KAAV,CAAP;QACD;MAPH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GA7DuB7B,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}